
# colors, clock, and stuff
#set -g default-terminal "xterm-256color" # works, but oh so wrong
#set -ga terminal-overrides ",xterm-256color*:Tc"
set -g default-terminal "screen-256color"
set -g clock-mode-style 12
#setw -g clock-mode-colour cyan

# This command runs tmux a non-login shell(the default is to run in login shell)
#set -g default-command "${SHELL}"

# Bind Prefix key to Control + a (This will probably change)
#set-option -g prefix M-Space
set-option -g prefix Home
#set-option -g prefix2 C-a
set-option -g prefix2 M-a
#unbind-key C-a
#unbind-key M-a
#bind-key C-a send-prefix
#bind-key M-a send-prefix
unbind-key C-l

unbind-key g
# Nested session will use screen keybindings
#bind -n C-a send-prefix

# add double-tap meta key to toggle last window
#bind-key -r M-Space last-window
bind-key -r Home last-window
bind-key -r M-a last-window

# Mouse mode
setw -g mouse on

# Making the starting tab 1 instead of zero for easy access
set -g base-index 1

# Making the starting pane 1 instead of zero 
setw -g pane-base-index 1
# This makes it so the escape key is immediate. If you are 
#connected to a remote session and its acting slow comment this
set -g escape-time 20

# Auto reorders tmux windows(Only Tmux 1.7 and above)
# See https://stackoverflow.com/questions/8469612/how-do-i-make-tmux-reorder-windows-when-one-is-deleted 
# For options under 1.7
 set-option -g renumber-windows on


# split windows
#bind-key h split-window -v
#bind-key v split-window -h

# use prefix, then r to source .tmux.config
bind r source-file ~/.tmux.conf \; display "Fresh Tmux Config!"

# shortcut to open tmux config
#bind-key e new-window -n 'conf' 'vim ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

#bind-key -n g new-window -n -d 'countdown' 'pomo 25m'

# All new window will be renamed to shell and the can be renamed
#bind-key c new-window -n 'shell'
#set-option -w automatic-rename on -n shell
set-option -g allow-rename on
#set-window-option -g automatic-rename off 
set-window-option -g automatic-rename on

# vi keys to navigate panes

# bind -r j select-pane -D
# bind -r k select-pane -U
# bind -r h select-pane -L
# bind -r l select-pane -R

# bind-key -n C-Up select-pane -U
# bind-key -n C-Down select-pane -D
# bind-key -n C-Left select-pane -L
# bind-key -n C-Right select-pane -R
bind -n M-n select-pane -t :.+
bind -n M-e select-pane -t :.-

# # vi keys to resize
# bind -r C-j resize-pane -D 1
# bind -r C-k resize-pane -U 1
# bind -r C-h resize-pane -L 1
# bind -r C-l resize-pane -R 1

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# vi for copy mode
setw -g mode-keys vi

# vi for command status
set -g status-keys vi
# This section of hotkeys mainly work in copy mode and no where else

# vim keys in copy and choose mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
#bind-key Escape copy-mode			# default key: prefix [
#bind-key p paste-buffer				# default key: prefix ] ; interactively clipboard history key: prefix = 
#bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# bind-key = choose-buffer 			# tmux clipboard history (use Ctrl+s to search string)

# clear delete all paste buffer at once interactively (aka tmux clipboard) [credit: nicm from #tmux irc]
# C-b = C-t D
#bind-key -T copy-mode-vi C-Up send -N1 -X scroll-up
#bind-key -T copy-mode-vi C-Down send -N1 -X scroll-down
 # clear all paste buffer via cli
# while tmux delete-buffer; do :; done

# send to tmux clipboard or system clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "copy to tmux clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "copy to system clipboard"

# set the current tmux version (use this variable on if-shell commands)
# run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6- | tr -d '[A-Z][a-z]')" # remove alphabets e.g 2.9a ==> 2.9 only

bind-key -n M-/ copy-mode \; send-key ?
# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' {
  bind-key -T copy-mode-vi v send-keys -X begin-selection;
  bind-key -T copy-mode-vi V send-keys -X select-line; 
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; 
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; 
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; 
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; 
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; 
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; 
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"; 
  bind-key -n M-d capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; display-popup -w 80% -h 60% -E "${SCRIPTS}/tmux_scripts/fzf-speed" 
}

#bind-key Tab capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; display-popup -w 80% -h 60% -E "/home/mgalvan/.local/scripts/tmux_scripts/fzf-speed"'

# google search the selected text (requires: surfraw, browser: e.g w3m)
# bind-key -T copy-mode-vi 'u' send -X copy-selection \; run-shell 'tmux show-buffer | xsel -i -b' \; new-window -n gsearch \; send-keys -t gsearch 'sr google "$(xsel -b)" && tmux kill-window' 'Enter'

#bind-key -n M-d capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; display-popup -w 80% -h 60% -E "/home/mgalvan/.local/bin/scripts/tmux_scripts/fzf-speed"

#bind-key ~ capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; split-window -Z "/home/mgalvan/.local/bin/scripts/fzf-speed"

# tmux 2.4 or higher
bind-key -T copy-mode-vi 'o' send-keys -X copy-selection \; new-window -n google \; send-keys -t google 'sr google "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'i' send-keys -X copy-selection \; new-window -n imagegoogle \; send-keys -t imagegoogle 'sr imagesgoogle "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'I' send-keys -X copy-selection \; new-window -n imagegoogle \; send-keys -t imagegoogle 'surfraw imagesgoogle "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'p' send-keys -X copy-selection \; new-window -n wikipedia \; send-keys -t wikipedia 'sr wikipedia "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'u' send-keys -X copy-selection \; new-window -n youtube \; send-keys -t youtube 'mpv "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'U' send-keys -X copy-selection \; new-window -n youtube \; send-keys -t youtube 'youtube-viewer "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'd' send-keys -X copy-selection \; new-window -n duck \; send-keys -t duck 'duck "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'O' send-keys -X copy-selection \; new-window -n w3m \; send-keys -t w3m 'w3m "$(tmux show-buffer)" && tmux kill-window' 'Enter'
#bind-key -T copy-mode-vi 'x' send-keys -X copy-selection \; new-window -n discover \; send-keys -t discover '@discover "$(tmux show-buffer)" && tmux kill-window' 'Enter'


# vim copy mode rebinds for (tmux 2.3 or lower)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  'bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-choice h tree-collapse; \
  bind-key -t vi-choice l tree-expand; \
  bind-key -t vi-choice H tree-collapse-all; \
  bind-key -t vi-choice L tree-expand-all; \
  bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -in -selection clipboard"; \
  bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard" \
  bind-key Tab capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; split-window "/path/to/fzf-speed"'

#Use the below for zoomed split in old versions of tmux
  #bind-key Tab capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; split-window -Z "/path/to/fzf-speed"

# Have the status bar not showing
# set-option -g status off

# Keybindings for controlling the Status Bar
#bind-key S { set-option status on }
#bind-key s { set-option status off }
#bind-key i { set-option status-position top }
#bind-key u { set-option status-position bottom }

# die, die, die (just be careful, right next to C-c)

# color the pane borders nearly invisible
# (when not using hacked tmux without them)
set -g pane-border-style "fg=#171717"
set -g pane-active-border-style "fg=#171717"

# copy and paste hightlight color
#set -g mode-style "bg=black"

# status bar settings
set -g status-style "fg=#665c54"
set -g status-bg default
set -g status-justify centre
#set -g status-position top
#set -g status-interval 1
#set-option -g status-left "#[fg=green][#S] #[fg=yellow]#I #[fg=cyan]#P         "
set-option -g status-left "[#S] #I #P         "
set -g status-left-length 40
#set -g status-left ""
set -g status-right "  %a %D %l:%M:%p"

#bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"
# forget the find window.  That is for chumps

# find least accessed directories
bind-key -r f run-shell "tmux neww ${SCRIPTS}/tmux_scripts/tmux-sessionizer"
# Homerow
bind-key -r N run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"
bind-key -r E run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"
bind-key -r I run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"
bind-key -r O run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"

#Above Homerow
bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r L run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"
bind-key -r U run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"
bind-key -r Y run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer ~/"
bind-key -r J run-shell "${SCRIPTS}/tmux_scripts/tmux-sessionizer  ~/"

